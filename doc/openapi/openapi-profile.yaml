profiles:
  get:
    tags:
      - Profile
    summary: Get all profiles with pagination
    parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: Page size
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: Sort field and direction
        schema:
          type: string
    responses:
      200:
        description: Successful operation
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/ProfileResponsePage'


profiles-id:
  get:
    tags:
      - Profile
    summary: Get profile by ID
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Successful operation
        content:
          application/json:
            schema:
              $ref: '#/ProfileResponse'
      404:
        description: Profile not found
        content:
          application/json:
            schema:
              $ref: 'openapi.yaml#/components/schemas/ErrorResponse'
            example:
              status: 404
              message: "Profile not found by id: {id}"
              details: ""
              timestamp: "2023-04-20T12:00:00Z"

  patch:
    tags:
      - Profile
    summary: Update profile
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/ProfileUpdateRequest'
    responses:
      200:
        description: Successful update
      404:
        description: Profile not found
        content:
          application/json:
            schema:
              $ref: 'openapi.yaml#/components/schemas/ErrorResponse'
            example:
              status: 404
              message: "Profile not found by id: {id}"
              details: ""
              timestamp: "2023-04-20T12:00:00Z"


profiles-id-addresses:
  get:
    tags:
      - Profile
    summary: Get all addresses by profile ID
    parameters:
      - name: id
        in: path
        description: Profile ID
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Successful operation
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/ProfileAddressResponse'
  post:
    tags:
      - Profile
    summary: Create a new address for the profile
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/ProfileAddressCreateRequest'
    responses:
      200:
        description: Address created successfully



profiles-id-addresses-address-id:
  patch:
    tags:
      - Profile
    summary: Update an existing address for the profile
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: addressId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/ProfileAddressUpdateRequest'
    responses:
      200:
        description: Address updated successfully
      404:
        description: Profile not found
        content:
          application/json:
            schema:
              $ref: 'openapi.yaml#/components/schemas/ErrorResponse'
            example:
              status: 404
              message: "Address not found by id: {0} and profileId: {1}"
              details: ""
              timestamp: "2023-04-20T12:00:00Z"

#shema

ProfileAddressUpdateRequest:
  type: object
  properties:
    type:
      $ref: '#/AddressType'
      description: Address type
    street:
      type: string
      description: Street name
    houseNumber:
      type: string
      description: House number
    apartmentNumber:
      type: string
      description: Apartment number
    city:
      type: string
      description: City name
    state:
      type: string
      description: State name
    postalCode:
      type: string
      description: Postal code
    country:
      type: string
      description: Country name
    isActive:
      type: boolean
      description: Is the address active
    description:
      type: string
      description: Address description

ProfileAddressCreateRequest:
  type: object
  required:
    - type
    - street
    - houseNumber
    - apartmentNumber
    - city
    - state
    - postalCode
    - country
  properties:
    type:
      $ref: '#/AddressType'
      description: Address type
    street:
      type: string
      description: Street name
    houseNumber:
      type: string
      description: House number
    apartmentNumber:
      type: string
      description: Apartment number
    city:
      type: string
      description: City name
    state:
      type: string
      description: State name
    postalCode:
      type: string
      description: Postal code
    country:
      type: string
      description: Country name
    isActive:
      type: boolean
      description: Is the address active
    description:
      type: string
      description: Address description


ProfileUpdateRequest:
  type: object
  properties:
    firstName:
      type: string
    lastName:
      type: string
    middleName:
      type: string
    birthday:
      type: string
      format: date
    gender:
      $ref: '#/gender'
    phones:
      type: array
      items:
        type: string
        example: +380963332211
    messengers:
      type: array
      items:
        $ref: '#/ContactMessengerRequest'
  required:
    - lastName

ContactMessengerRequest:
  type: object
  properties:
    type:
      $ref: '#/MessengerType'
    messenger:
      type: string
  required:
    - type
    - messenger

ProfileResponsePage:
  type: object
  properties:
    content:
      type: array
      items:
        $ref: '#/ProfileResponse'
    totalElements:
      type: integer
    totalPages:
      type: integer
    last:
      type: boolean
    size:
      type: integer
    number:
      type: integer
    numberOfElements:
      type: integer
    first:
      type: boolean
    empty:
      type: boolean

ProfileResponse:
  type: object
  properties:
    id:
      type: string
      format: uuid
      description: Profile ID
    firstName:
      type: string
      description: First name
    lastName:
      type: string
      description: Last name
    middleName:
      type: string
      description: Middle name
    birthday:
      type: string
      format: date
      description: Birthday
    gender:
      $ref: '#/gender'
    addresses:
      type: array
      items:
        $ref: '#/ProfileAddressResponse'
      description: List of addresses
    contact:
      $ref: '#/ProfileContactResponse'

ProfileAddressResponse:
  type: object
  properties:
    id:
      type: string
      format: uuid
      description: Address ID
    type:
      $ref: '#/AddressType'
      description: Address type
    street:
      type: string
      description: Street name
    houseNumber:
      type: string
      description: House number
    apartmentNumber:
      type: string
      description: Apartment number
    city:
      type: string
      description: City name
    state:
      type: string
      description: State name
    postalCode:
      type: string
      description: Postal code
    country:
      type: string
      description: Country name
    description:
      type: string
      description: Address description
    isActive:
      type: boolean
      description: Is the address active

ProfileContactResponse:
  type: object
  properties:
    id:
      type: string
      format: uuid
      description: Contact ID
    messengers:
      type: array
      items:
        $ref: '#/ContactMessengerResponse'
      description: List of messengers
    phones:
      type: array
      items:
        type: string
      description: List of phone numbers

ContactMessengerResponse:
  type: object
  properties:
    type:
      $ref: '#/MessengerType'
      description: Messenger type
    messenger:
      type: string
      description: Messenger identifier

AddressType:
  type: string
  enum:
    - HOME
    - WORK

MessengerType:
  type: string
  enum:
    - TELEGRAM
    - VIBER
    - WHATSAPP
    - MESSENGER

gender:
  type: string
  enum:
    - MALE
    - FEMALE
